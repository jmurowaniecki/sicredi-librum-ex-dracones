version: 2.1

executors:
  buildpack:
    docker:
      - image: circleci/buildpack-deps:stretch

  node-angular:
    docker:
      - image: lambdadeveloper/compilouit:angular

  unstable:
    docker:
      - image: lambdadeveloper/sicredi:bloated



jobs:

  build:
    machine: true
    parameters:
      CLI:
        type: string
        default: ""
    steps:
      - when:
          condition: << parameters.CLI >>
          steps:
            - run:
                name: Local build handling.
                command: |
                  if [[ ${CIRCLE_SHELL_ENV} =~ "localbuild" ]]
                  then if [ -d /workdir ]
                    then ln -s /workdir /tmp/_circleci_local_build_repo
                    else echo 'Try to execute using `make circleci...` - see `make help` for examples.'
                        exit 1
                    fi
                  fi
            - checkout
      - unless:
          condition: not << parameters.CLI >>
          steps:
            - attach_workspace:
                at: .
      - run:
          name: Dockerhub authentication.
          command: echo -n "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

      - run:
          name: Build and push work in progress for APP.
          command: |
            docker build -t ${DOCKER_USERNAME}/${APP}:bloated . -f ./app/Dockerfile
            docker push     ${DOCKER_USERNAME}/${APP}:bloated

      - run:
          name: Push dated container to Dockerhub.
          command: |
            DOCKER_LAST=${DOCKER_USERNAME}/${APP}:tmp-$(date +'%Y%m%d%H%I%S')
            docker tag  ${DOCKER_USERNAME}/${APP}:bloated ${DOCKER_LAST}
            docker push ${DOCKER_LAST}

      - run:
          name: Build and push latest TAG for APP.
          command: |
            docker build -t ${DOCKER_USERNAME}/${APP}:latest . -f ./app/BUILD.Dockerfile
            docker push     ${DOCKER_USERNAME}/${APP}:latest



  quality:
    executor: unstable
    working_directory: /application
    steps:

      - restore_cache:
          key: app-modules-{{ checksum "app/package.json" }}

      - run:
          name: Perform instalations - ensure latest modules.
          command: cd app && yarn install


      - save_cache:
          key: app-modules-{{ checksum "app/package.json" }}
          paths:
            - app/node_modules

      - run:
          name: Perform Lint
          command: cd app && yarn run lint

      - persist_to_workspace:
          root: .
          paths:
            - .


  deploy:
    machine: true
    environment:
      HEROKU_APP: sicredi
    steps:
      - when:
          condition: << parameters.CLI >>
          steps:
            - run:
                name: Local build handling.
                command: |
                  if [[ ${CIRCLE_SHELL_ENV} =~ "localbuild" ]]
                  then if [ -d /workdir ]
                    then ln -s /workdir /tmp/_circleci_local_build_repo
                    else echo 'Try to execute using `make circleci...` - see `make help` for examples.'
                        exit 1
                    fi
                  fi
            - checkout
      - unless:
          condition: not << parameters.CLI >>
          steps:
            - attach_workspace:
                at: .

      - run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

      - run: |
          if [[ $(command -v heroku) == "" ]]; then
            curl https://cli-assets.heroku.com/install.sh | sh
          else
            echo "Heroku is already installed. No operation was performed."
          fi

      - run: bash .circleci/setup-heroku.sh
      - run: |
          echo "${HEROKU_API_KEY}" | docker login registry.heroku.com --username "_" --password-stdin
          heroku config:set HEROKU_APP_NAME=${HEROKU_APP}    -a ${HEROKU_APP}
          heroku config:set HEROKU_API_KEY=${HEROKU_API_KEY} -a ${HEROKU_APP}
          export            HEROKU_API_KEY=${HEROKU_API_KEY}

      - run: |
          docker build --rm=false -t registry.heroku.com/${HEROKU_APP}/web . -f ./app/DEPLOY.Dockerfile
          docker push                registry.heroku.com/${HEROKU_APP}/web:latest



workflows:

  version: 2.1

  all:

    jobs:
      - quality

      - build:
          CLI: ${CLI}
          requires:
            - quality
          filters:
            branches:
              only: master

      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
